# ------------------------------------------------------------------------------------------------------------------------
# 6. Reusable template to deploy a Bicep File using variables from a file merged into a parameters file
# ------------------------------------------------------------------------------------------------------------------------
parameters:
  - name: environmentName
    default: 'DEV'
  - name: bicepPath
    default: 'infra/bicep'
  - name: bicepFile
    default: 'main.bicep'
  - name: parameterFile
    default: 'main.bicepparam' # or 'main.parameters.json'

stages:
  - stage: DeployStage${{ parameters.environmentName }}
    displayName: Deploy Stage ${{ parameters.environmentName }}
    jobs:
    - job:
      displayName: Deploy Bicep ${{ parameters.environmentName }}

      variables:
        - template: ../vars/var-common.yml
        # Bring in environment specific variable files
        - ${{ if eq(lower(parameters.environmentName), 'demo') }}:
          - template: ../vars/var-demo.yml
        - ${{ if eq(lower(parameters.environmentName), 'dev') }}:
          - template: ../vars/var-dev.yml
        - ${{ if eq(lower(parameters.environmentName), 'qa') }}:
          - template: ../vars/var-qa.yml
        - ${{ if eq(lower(parameters.environmentName), 'prod') }}:
          - template: ../vars/var-prod.yml

        - name: environmentName
          value: ${{ parameters.environmentName }}
        - name: environmentNameUpper
          value: ${{ upper(parameters.environmentName) }}
        - name: environmentNameLower
          value: ${{ lower(parameters.environmentName) }}

        - name: bicepFilePath
          value: '$(Build.SourcesDirectory)/${{ parameters.bicepPath }}/${{ parameters.bicepFile }}'
        - name: parameterFilePath
          value: '$(Build.SourcesDirectory)/${{ parameters.bicepPath }}/${{ parameters.parameterFile }}'

      steps:
        # Create environment specific local variable for Resource Group Name
        - bash: |
            resourceGroupName=$(echo "$(resourceGroupPrefix)_$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
            echo "resourceGroupName=$resourceGroupName"
            echo "##vso[task.setvariable variable=resourceGroupName]$resourceGroupName"
          displayName: 'Create Variables'
          continueOnError: true

        - task: Bash@3
          displayName: 'Display Variables'
          continueOnError: true
          inputs:
            targetType: 'inline'
            script: 'env | sort'

        # Update bicep parameter file with environment specific variables
        - task: qetza.replacetokens.replacetokens-task.replacetokens@6
          displayName: 'Update Parameter File'
          inputs:
            targetFiles: $(parameterFilePath)
            tokenPrefix: '#{'
            tokenSuffix: '}#'

        - task: CmdLine@2
          displayName: Display Parameter File Contents
          continueOnError: true
          inputs:
            script: |
              echo "Bicep File Name: $(bicepFilePath)"
              echo "Parameter File Name: $(parameterFilePath)"
              cat  $(parameterFilePath)

        - ${{ if eq(variables.environmentNameUpper, 'DEMO') }}:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Resources ${{ parameters.environmentName }}'
            inputs:
              azureResourceManagerConnection: $(serviceConnectionDEMO)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(bicepFilePath)
              csmParametersFile: $(parameterFilePath)

        - ${{ if eq(variables.environmentNameUpper, 'DEV') }}:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Resources ${{ parameters.environmentName }}'
            inputs:
              azureResourceManagerConnection: $(serviceConnectionDEV)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(bicepFilePath)
              csmParametersFile: $(parameterFilePath)

        - ${{ if eq(variables.environmentNameUpper, 'QA') }}:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Resources ${{ parameters.environmentName }}'
            inputs:
              azureResourceManagerConnection: $(serviceConnectionQA)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(bicepFilePath)
              csmParametersFile: $(parameterFilePath)

        - ${{ if eq(variables.environmentNameUpper, 'PROD') }}:
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy Resources ${{ parameters.environmentName }}'
            inputs:
              azureResourceManagerConnection: $(serviceConnectionPROD)
              resourceGroupName: $(resourceGroupName)
              location: $(location)
              csmFile: $(bicepFilePath)
              csmParametersFile: $(parameterFilePath)
